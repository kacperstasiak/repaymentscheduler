package com.kacperstasiak.repaymentscheduler;

/**
 * The user interface frame displaying the debts list
 * @author Kacper Stasiak
 */
public class DebtsListFrame extends javax.swing.JFrame {
    ScheduleTableModel model = null;
    
    /**
     * Creates new form testJFrame
     * @param model The model class for the schedule
     */
    public DebtsListFrame(ScheduleTableModel model) {
        this.model = model;
        initComponents();
        
        debtTable.setRowSelectionAllowed(true);
        debtTable.getSelectionModel().addListSelectionListener(
                (javax.swing.event.ListSelectionEvent event) -> listSelectionPerformed(event)
        );
        
        // By default, warning shouldn't be displayed
        budgetWarningLabel.setVisible(false);
        
        double minpaySum = 0;
        budgetInputField.setValue(minpaySum);
        budgetInputField.addPropertyChangeListener("value", 
                (java.beans.PropertyChangeEvent event) -> budgetInputValueChanged(event)
        );
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JButton();
        sidepanelSplitter = new javax.swing.JSplitPane();
        debtTableScroll = new javax.swing.JScrollPane();
        debtTable = new javax.swing.JTable();
        sidepanel = new javax.swing.JPanel();
        editButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();
        sidepanelTitle = new javax.swing.JLabel();
        budgetInputField = new javax.swing.JFormattedTextField();
        budgetAmountLabel = new javax.swing.JLabel();
        budgetWarningLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Debt Repayment Assistant");
        setPreferredSize(new java.awt.Dimension(1000, 500));
        setSize(new java.awt.Dimension(1000, 500));

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        sidepanelSplitter.setDividerLocation(775);

        debtTableScroll.setPreferredSize(null);

        debtTable.setModel(model);
        debtTable.getTableHeader().setReorderingAllowed(false);
        debtTableScroll.setViewportView(debtTable);

        sidepanelSplitter.setLeftComponent(debtTableScroll);

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        delButton.setText("Delete");

        sidepanelTitle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        sidepanelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sidepanelTitle.setText("Debt 1");

        javax.swing.GroupLayout sidepanelLayout = new javax.swing.GroupLayout(sidepanel);
        sidepanel.setLayout(sidepanelLayout);
        sidepanelLayout.setHorizontalGroup(
            sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidepanelLayout.createSequentialGroup()
                        .addComponent(sidepanelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(sidepanelLayout.createSequentialGroup()
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        sidepanelLayout.setVerticalGroup(
            sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sidepanelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(delButton))
                .addContainerGap(329, Short.MAX_VALUE))
        );

        sidepanelSplitter.setRightComponent(sidepanel);

        budgetInputField.setText("1000");

        budgetAmountLabel.setText("Available repayment budget: Â£");

        budgetWarningLabel.setForeground(new java.awt.Color(200, 0, 0));
        budgetWarningLabel.setText("Warning: Not enough to cover all minimum paments");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidepanelSplitter)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(budgetAmountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(budgetInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(budgetWarningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 306, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(addButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(budgetInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(budgetAmountLabel)
                    .addComponent(budgetWarningLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sidepanelSplitter, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editButtonActionPerformed
    
    private void listSelectionPerformed(javax.swing.event.ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) return;
        int selectedRow = debtTable.getSelectedRow();
        if (selectedRow == -1) return;
        
        sidepanelTitle.setText((String) model.getValueAt(selectedRow, 0));
    }
    
    private void budgetInputValueChanged(java.beans.PropertyChangeEvent event) {
        double budget = ((Number)budgetInputField.getValue()).doubleValue();
        
        // Display a warning if budget is less than sum of all minimum payments
        int minPaySumPence = model.getMinimumPaymentSum();
        double minPaySum = minPaySumPence / 100.0;
        if (budget < minPaySum) {
            budgetWarningLabel.setVisible(true);
        } else {
            budgetWarningLabel.setVisible(false);
        }
        
        model.setBudgetAmount(budget);
        model.update();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel budgetAmountLabel;
    private javax.swing.JFormattedTextField budgetInputField;
    private javax.swing.JLabel budgetWarningLabel;
    private javax.swing.JTable debtTable;
    private javax.swing.JScrollPane debtTableScroll;
    private javax.swing.JButton delButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel sidepanel;
    private javax.swing.JSplitPane sidepanelSplitter;
    private javax.swing.JLabel sidepanelTitle;
    // End of variables declaration//GEN-END:variables
}
